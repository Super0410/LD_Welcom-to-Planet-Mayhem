//=======================================================================================================================================//
// Product:    	Welcome to Planet Mayhem																								 //
// Developer : 	Pericles Barros																											 //
// Company:    	GameDevTeam																												 //
// Date: 	   	2017/04/22																						 						 //
//=======================================================================================================================================//
//using GameSystems.ObjectManagement;



#region Imports

using UnityEngine;
using Utils.Libraries;
using System.Collections.Generic;

#endregion

namespace WelcomeToPlanetMayhem
{
	public class PlayerInventory : MonoBehaviour
	{
		//===============================================================================================================================//
		//======================================================== Pending Tasks ========================================================//
		//===============================================================================================================================//

		#region Pending Tasks


		#endregion

		//===============================================================================================================================//
		//====================================================== Internal Classes =======================================================//
		//===============================================================================================================================//

		#region Internal Classes


		#endregion

		//===============================================================================================================================//
		//==================================================== Inspector Variables ======================================================//
		//===============================================================================================================================//

		#region Inspector Variables


		#endregion

		//===============================================================================================================================//
		//======================================================= Private Fields ========================================================//
		//===============================================================================================================================//

		#region Private Fields

		List<string> weaponIDs = new List<string> ();
		Item currentTool;

		int currentWeaponID = 0;

		#endregion

		//===============================================================================================================================//
		//===================================================== Public Properties =======================================================//
		//===============================================================================================================================//

		#region Public Properties

		public bool HasTool {
			get{ return currentTool != null; }
		}

		#endregion

		//===============================================================================================================================//
		//==================================================== Unity Event Functions ====================================================//
		//===============================================================================================================================//

		#region Unity Event Functions

		void Awake ()
		{

		}

		void Start ()
		{

		}

		void Update ()
		{
		
		}

		#endregion

		//===============================================================================================================================//
		//=========================================================== Public Methods ====================================================//
		//===============================================================================================================================//

		#region Public Methods

		public void AddWeapon (string weaponID)
		{
			if (weaponIDs == null)
				weaponIDs = new List<string> ();
			
			if (!weaponIDs.Contains (weaponID))
				weaponIDs.Add (weaponID);
		}

		public bool UseTool ()
		{
			if (!HasTool)
				return false;
			
			if (currentTool != null) {
				currentTool.Use ();
				ObjectPooler.ReturnInstance (currentTool.GetType ().Name, currentTool.gameObject);
				currentTool = null;
			}

			return true;			
		}

		public string GetNextWeapon (int increment)
		{
			currentWeaponID = (currentWeaponID + increment) % weaponIDs.Count;
			return weaponIDs [currentWeaponID];
		}


		#endregion

		//===============================================================================================================================//
		//========================================================== Private  Methods ===================================================//
		//===============================================================================================================================//

		#region Private Methods

		

		#endregion

		//===============================================================================================================================//
		//============================================================= Coroutines ======================================================//
		//===============================================================================================================================//

		#region Coroutines

		

		#endregion

		
		//===============================================================================================================================//
		//====================================================== Debugging & Testing ====================================================//
		//===============================================================================================================================//

		#region Debugging & Testing



		#endregion

	}
}