//=======================================================================================================================================//
// Product:    	Welcome to Planet Mayhem																								 //
// Developer : 	Pericles Barros																											 //
// Company:    	GameDevTeam																												 //
// Date: 	   	2017/04/22																						 						 //
//=======================================================================================================================================//


#region Imports

using UnityEngine;
using System.Collections;
using UnityEngine.UI;

#endregion


public class PlayerUI : MonoBehaviour
{
	//===============================================================================================================================//
	//======================================================== Pending Tasks ========================================================//
	//===============================================================================================================================//

	#region Pending Tasks


	#endregion

	//===============================================================================================================================//
	//====================================================== Internal Classes =======================================================//
	//===============================================================================================================================//

	#region Internal Classes

	string[] rankString = { "1st", "2nd", "3rd", "4th" };

	#endregion

	//===============================================================================================================================//
	//==================================================== Inspector Variables ======================================================//
	//===============================================================================================================================//

	#region Inspector Variables

	[SerializeField] Image statusUI;
	[SerializeField] Slider healthBar;
	[SerializeField] float hpLerpSpeed;
	[SerializeField] Text scoreText;
	[SerializeField] Text rankText;

	#endregion

	//===============================================================================================================================//
	//======================================================= Private Fields ========================================================//
	//===============================================================================================================================//

	#region Private Fields

	float targetHP;

	#endregion

	//===============================================================================================================================//
	//===================================================== Public Properties =======================================================//
	//===============================================================================================================================//

	#region Public Properties

	#endregion

	//===============================================================================================================================//
	//==================================================== Unity Event Functions ====================================================//
	//===============================================================================================================================//

	#region Unity Event Functions

	void Awake ()
	{

	}

	void Start ()
	{
		if (healthBar == null)
			healthBar = GetComponentInChildren<Slider> ();
		
	}

	void Update ()
	{
		healthBar.value = Mathf.Lerp (healthBar.value, targetHP, hpLerpSpeed * Time.deltaTime);
	}

	#endregion

	//===============================================================================================================================//
	//=========================================================== Public Methods ====================================================//
	//===============================================================================================================================//

	#region Public Methods

	public void SetStatus (string statusID)
	{
		statusUI.material.SetTexture (0, TextureAtlas.GetTexture (statusID));
	}

	public void UpdateHealthBar (float hp, bool lerp = false)
	{
		if (hp < 0f)
			hp = 0f;
		
		if (!lerp)
			healthBar.value = hp;

		targetHP = hp;
	}

	public void UpdateScore (int score)
	{
		if (scoreText == null)
			return;
			
		scoreText.text = score.ToString ("D6");
	}

	public void UpdateRank (int rank)
	{
		rankText.text = rankString [rank];
	}

	public void GameOver ()
	{
		UpdateHealthBar (0f);
		//TODO: fade screen to Game Over screen
	}

	public void ShowRespawn ()
	{
		UpdateHealthBar (0f);
	}

	#endregion

	//===============================================================================================================================//
	//========================================================== Private  Methods ===================================================//
	//===============================================================================================================================//

	#region Private Methods

		

	#endregion

	//===============================================================================================================================//
	//============================================================= Coroutines ======================================================//
	//===============================================================================================================================//

	#region Coroutines

		

	#endregion

		
	//===============================================================================================================================//
	//====================================================== Debugging & Testing ====================================================//
	//===============================================================================================================================//

	#region Debugging & Testing



	#endregion

}
